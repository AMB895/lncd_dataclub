#+TITLE: Terminal as IDE
#+OPTIONS: reveal_single_file:t
#+REVEAL_ROOT+ignore: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_VERSION+ignore: 5.1.0

* Front matter                                                 :noexport:

consider using =screenkey=

exporting with org-reveal. see [[file:Makefile]] for downloading real.js
#+begin_src elisp :results none
(use-package ox-reveal :ensure t)
#+end_src elisp :results none
A slightly modified =org-inkscape-img= for creating and editing svgs like power point slides.
#+begin_src elisp :results none
(use-package ox-reveal :ensure t)
(defun org-inkscape-img (string)
    (interactive (list (read-from-minibuffer "Insert image name: ")))
    (let* ((filename (expand-file-name string))
           (dirname (file-name-directory filename))
           (file-p (file-exists-p filename)))
      (unless file-p
        (message dirname)
        (unless (file-directory-p dirname) (make-directory dirname))
        (message filename)
        (with-temp-file filename
          (insert "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"1280px\" height=\"720px\" viewBox=\"0 0 164.13576 65.105995\" version=\"1.1\" id=\"svg8\" inkscape:version=\"1.0.2 (e86c8708, 2021-01-15)\" sodipodi:docname=\"disegno.svg\"> <defs id=\"defs2\" /> <sodipodi:namedview id=\"base\" pagecolor=\"#ffffff\" bordercolor=\"#666666\" borderopacity=\"1.0\" inkscape:zoom=\"1.2541194\" inkscape:cx=\"310.17781\" inkscape:cy=\"123.03495\"z inkscape:window-width=\"1440\" inkscape:window-height=\"847\" inkscape:window-x=\"1665\" inkscape:window-y=\"131\" inkscape:window-maximized=\"1\"  inkscape:current-layer=\"svg8\" /><g/></svg>")))
      (start-process "Inkscape Figure" "*Inkscape Figure*" "inkscape" filename)))
#+end_src




* History timeline
#+begin_src R :results output graphics :exports results :file imgs/timeline.png  :width 700 :height 300 :units px :session :cache yes
library(dplyr); library(RColorBrewer); library(lubridate)
dates <- read.table(header=T, "dates.txt") |>
  mutate(start=ymd(paste0(year,"0101")),
               end=start,
               color=factor(group,
                           labels=brewer.pal(name="Set2",length(unique(group)))))
p <- vistime::gg_vistime(dates)
print(p)
#+end_src

#+RESULTS[9d445535cb867cce818f5d427881e140b28a8600]:
[[file:imgs/timeline.png]]

* Shell w/Readline
readline keyboard commands (described below) are implemented or imitated in many places. bash, matlab, R, python, etc

*** Movements
 | =C-a=              | cursor to start of line |
 | =C-e=              | cursor to end of line   |
 | =M-b= or =M-left=  | back word               |
 | =M-f= or =M-right= | forward word            |
 [[file:imgs/readline_move.gif]]

*** Deleting (Cut or "kill")
 | =C-w= | delete word back         |
 | =M-Backspace= | delete chars back   |
 | =M-d= | delete word forward      |
 | =C-u= | delete all before cursor |
 | =C-k= | delete all after cursor  |
 [[file:imgs/readline_delete.gif]]

*** Pasting (Yank)
 | =C-y=     | paste (yank from kill-ring) |
 | =M-y=     | cycle kill-ring             |
 | =C-/=     | undo                        |
 [[file:imgs/readline_yank_undo.gif]]

*** Esoteric
 | =C-M-] x= | cursor back to char =x=   |
 | =C-x C-e= | open line in =$EDITOR=    |
 [[file:imgs/readline_tochar_external.gif]]

*** Shell
 | =up=      | previous history        |
 | =C-r=     | history search          |
 | =M-.=     | last argument           |
 | =M-2 M-.= | second to last argument |


*** Misc notes
  * can push enter with cursor anywhere on line
  * middle mouse button to paste with mouse cursor anywhere

*** MacOS Terminal: Option as Meta
 Terminal > Settings > Profiles > keyboard: "Option as Meta"

https://support.apple.com/guide/terminal/change-profiles-keyboard-settings-trmlkbrd/mac

* vim
[[file:imgs/vi-overview.svg]]

** Why
  * **grammar of editing**
    * [[https://missing.csail.mit.edu/2020/editors/][MIT lecture]] says "interface is a programming language"
  * ubiquity
   * =vi= is POSIX -- will exist on most any ssh server
   * all text. no X11 forwarding needed
   * default editor:  ~git commit~
#+COMMENT:  * vim is vi improved. neovim is modernization effort. other editors have emulation mode

** motions
** edits
** plugin: ALE
** demo
** using outside of vim

  * bash: =set -o vi=
  * zsh: =bindkey -v=
* tmux

* resource files
  * .bashrc .vimrc .tmux.conf
